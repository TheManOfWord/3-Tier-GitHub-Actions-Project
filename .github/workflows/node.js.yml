name: Node.js CICD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  compile:
    runs-on: [self-hosted, label-1]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Frontend Syntax Check
      - name: Frontend Syntax Check
        run: |
          cd client
          find . -type f -name "*.js" -exec node --check {} \;

      # Backend Syntax Check
      - name: Backend Syntax Check
        run: |
          cd api
          find . -type f -name "*.js" -exec node --check {} \;
          
  gitleaks-scan:
   runs-on: [self-hosted, label-1]
   needs: compile
   steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Gitleaks on entire repo
      uses: gitleaks/gitleaks-action@v2
      env:
        GITLEAKS_ARGS: detect --source . --exit-code 1
        
  trivy-scan:
   runs-on: [self-hosted, label-1]
   needs: compile
   steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Trivy
      uses: aquasecurity/setup-trivy@v0.2.3
      with:
        version: 'v0.61.0'

    - name: Scan frontend dependencies
      run: trivy fs ./client --severity HIGH,CRITICAL -f table -o trivy-client-report.txt || true

    - name: Upload Trivy report
      uses: actions/upload-artifact@v4
      with:
       name: trivy-client-report
       path: trivy-client-report.txt
       
  sonar-frontend:
    runs-on: [self-hosted, label-1]
    needs: trivy-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SonarQube Scan (client)
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: client        # ðŸ‘ˆ instead of working-directory
          args: >
            -Dsonar.projectKey=myorg_client
            -Dsonar.projectName=myorg_client
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  sonar-backend:
    runs-on: [self-hosted, label-1]
    needs: sonar-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SonarQube Scan (api)
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: api           # ðŸ‘ˆ instead of working-directory
          args: >
            -Dsonar.projectKey=myorg_api
            -Dsonar.projectName=myorg_api
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      







      

    
